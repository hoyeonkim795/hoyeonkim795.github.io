[ { "title": "[부동산] 서울아파트 거래량", "url": "/posts/%EB%B6%80%EB%8F%99%EC%82%B0-%EA%B1%B0%EB%9E%98%EB%9F%89/", "categories": "Real Estate, Seoul", "tags": "c++", "date": "2024-06-27 13:00:00 +0900", "snippet": "상속```html " }, { "title": "[Programming] C++ 상속", "url": "/posts/Programming-C++-%EC%83%81%EC%86%8D/", "categories": "Programming Language, C++", "tags": "c++", "date": "2022-02-09 19:32:30 +0900", "snippet": "상속 상속 문법 사용하기 공통의 특징을 모은 클래스를 설계한다. class Person{ std::string name; int age;}; class Professor : public Person{ int major;}; class Student : public Person{ int id;}; int main (){ Professor p; Student s;} 한 클래스가 다른 클래스에서 정의된 속성들(데이터, 함수)를 이어 받아서 사용하는 것 이미 ..." }, { "title": "[Programming] C++ 상수 멤버 함수와 this", "url": "/posts/Programming-C++-%EC%83%81%EC%88%98-%EB%A9%A4%EB%B2%84-%ED%95%A8%EC%88%98%EC%99%80-this/", "categories": "Programming Language, C++", "tags": "c++", "date": "2022-02-09 18:32:30 +0900", "snippet": "상수 멤버 함수와 thisvoid print() const{ x = 20;} 함수 선언 및 구현시 “함수 괄호 () 뒤에 const 가 붙는 함수” void print() const 상수 멤버 함수 안에서는 “모든 멤버를 상수 취급” 멤버 데이터의 값을 읽을 수는 있지만 “변경할 수 는 없다” 상수 멤버 함수를 사용하는 “중요한 이유” 코드 작성시 안정성 상수 객체는 상수 멤버 함수만 호출 할 수 있다. 상수 객체는 상수 멤버 함수만 호출할 수 있다. 상수 객체의 상태를 변경할 ..." }, { "title": "[Golang] goroutine channel", "url": "/posts/Golang-goroutine-channel/", "categories": "Programming Language, Golang", "tags": "golang", "date": "2021-12-19 14:21:40 +0900", "snippet": "Goroutine고루틴을 알기 전에, 쓰레드부터 알아보자!쓰레드란는 실행 흐름을 말한다.프로그램이 실행되면 메모리에 로드가 된다. 기계어 다발의 코드들이 메인함수부터 CPU가 IP를 하나씩 늘려가며 하나의 방향 흐름 으로 실행된다.멀티쓰레드는 여러개의 실행 흐름이다.코어(CPU) 가 번갈아가며 쓰레드를 실행시키면서 우리눈에는 동시에 실행되는것처럼 보인다.사실, CPU는 가만히 있고 OS가 스케쥴링 해주는 것이다.그런데, 쓰레드 전환시 비용이 발생한다. 이것을 컨텍스트 스위칭이라고 한다.멀티쓰레드 vs 멀티프로세스 ?프로그램을 ..." }, { "title": "[Golang] 문법 기억 더듬기", "url": "/posts/golang/", "categories": "Programming Language, Golang", "tags": "golang", "date": "2021-12-18 14:21:40 +0900", "snippet": "Go Modules Go 패키지들의 종속성을 관리하는 패키지 관리 시스템 Go 어플리케이션 내의 종속성 문제를 처리하기 위해 도입되었다. 모듈은 패키지를 트리 형식으로 저장하고 있고, 루트에는 go.mod 파일이 존재. 저장소에는 하나 이상의 Go 모듈이 포함된다. 각 모듈에는 하나 이상의 고 패키지가 포함되어 있음. go mod GOPATH 디렉토리 바깥에 프로젝트 디랙토리를 만들 수 있다. 언제, 어디서나, 누구라도 항상 동일한 build 결..." }, { "title": "[Framework] Spring Boot 강의 정리", "url": "/posts/Spring_Boot_1/", "categories": "Framework, SpringBoot", "tags": "springBoot, annotation", "date": "2021-12-13 14:21:40 +0900", "snippet": "Spring BootAnnotation 의미 사전적 의미는 주석이다. 자바에서 사용될 때의 어노테이션은 코드 사이에 주석처럼 쓰여서 특별한 의미, 기능을 수행하도록 하는 기술. 용도 컴파일러에게 코드 작성 문법 에러를 체크하도록 정보 제공 빌드 및 배치시 코드를 자동으로 생성할 수 있도록 정보 제공 런타임 시 특정 기능을 실행하도록 정보 제공 사용 순서 ..." }, { "title": "[Programming] 코테용 C++ 기본 문법 2", "url": "/posts/C++%EA%B8%B0%EB%B3%B8%EB%AC%B8%EB%B2%951/", "categories": "Programming Language, C++", "tags": "c++", "date": "2021-11-22 18:32:30 +0900", "snippet": "C++#include 전처리 지시자 함수의 원형을 미리 정의해야 함.’;’ 종결자 Enter, tab 을 넣더라도 결국 종결자를 통해 코드 정리됨.main c++ 코드에서는 반드시 main의 이름을 가지고 있는 함수가 있어야 한다.« 데이터 흐름, 방향을 의미한다.using namespace std std::cout 이 원래 형태 생략하기 위해 사용주석 /* //변수 선언 변수의 자료형 변수의 이름 숫자로 시작할 수 없음 c++에서 사용하고 있는 키워드 사용할 수 없음 w..." }, { "title": "[Programming] 코테용 C++ 기본 문법 1", "url": "/posts/C++%EA%B8%B0%EB%B3%B8%EB%AC%B8%EB%B2%95/", "categories": "Programming Language, C++", "tags": "c++, C++", "date": "2021-11-22 14:21:40 +0900", "snippet": "C++ 문법 배열 길이 int c_array[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};sizeof c_array// vector 길이vector.capacity(); Map // 선언map&amp;lt;string, int&amp;gt; m;// 확인if (m.find(&quot;Alice&quot;) != m.end()) { cout &amp;lt;&amp;lt; &quot;find&quot; &amp;lt;&amp;lt; endl; } else { cou..." }, { "title": "[Framework] EchoFramework를 사용해서 웹 브라우저에 Hello World 띄우기", "url": "/posts/echo_helloworld/", "categories": "Framework, Echo", "tags": "echoframework, 고랭, 고, 에코프레임워크", "date": "2021-04-13 14:21:40 +0900", "snippet": "Echoframework웹 브라우저 상에 Echoframework를 활용하여 “Hello World” 띄운다.소스코드링크Installation$ mkdir myapp &amp;amp;&amp;amp; cd myapp$ go mod init myapp$ go get github.com/labstack/echo/v4Server.gopackage mainimport ( &quot;net/http&quot; &quot;github.com/labstack/echo/v4&quot;)func main() { e := echo.New() e..." }, { "title": "[Database] 카우치베이스(Couchbase)", "url": "/posts/couchbase/", "categories": "Computer Science, Database", "tags": "카우치베이스, couchbase, database, NoSQL", "date": "2021-04-05 19:13:40 +0900", "snippet": "CouchbaseOverview카우치베이스 는 쉽게 수평 확장이 가능하고 고성능의 매우 유연한 문서 기반의 NoSQL 솔루션 이다.특징 응답시간이 매우 빠르다 대량의 동시 사용자 처리가 가능하다. 다운타임이 거의 없이 365일 가동할 수 있는 솔루션 Json 문서 객체를 지원하기에 정보 저장과 변경도 매우 유연하면서 쉽다. 성능 확장 시 서버 시스템을 실시간으로 추가하면서 서비스 용량 확장이 가능하기 때문에 유지 보수 측면에서 매우 편리 적용예, PayPal, draw something (사용자가 원하는 그림..." }, { "title": "[프로그래머스] 합승 택시 요금", "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%ED%95%A9%EC%8A%B9-%ED%83%9D%EC%8B%9C-%EC%9A%94%EA%B8%88/", "categories": "Computer Science, Algorithm", "tags": "프로그래머스, programmers, kakao", "date": "2021-03-18 22:03:30 +0900", "snippet": "합승 택시 요금2021 KAKAO BLIND RECRUITMENT🤎풀이본 문제는 다익스트라 알고리즘으로 푸는 문제이다.승객이 두 명이므로출발점에서 승객 두명이 헤어지는 지점까지의 최소 비용 + 헤어지는 지점에서 도착점 A 까지의 비용 + 헤어지는 지점에서 도착점 B 까지의 비용으로 풀면된다.헤어지는 지점은 결국 완전 탐색으로 모든 정점의 경우를 다 따지면 되고, 출발에서 도착점까지의 비용을 다익스타라 알고리즘을 사용해서 풀면된다.adj는 주어진 입력에 대해 출발점: [도착점, 비용] 형식으로 나타내었다.그리고 calculate..." }, { "title": "[Network] 대챙키와 공개키 SSL 동작방식", "url": "/posts/%EB%8C%80%EC%B9%AD%ED%82%A4-%EA%B3%B5%EA%B0%9C%ED%82%A4/", "categories": "Computer Science, Network", "tags": "symmetric key, public key, ssl", "date": "2021-03-13 22:03:30 +0900", "snippet": "대칭키와 공개키암호화 알고리즘의 종류인 대칭키와 공개키에 대해 알아보고 SSL 동작방식에 대해 알아보겠습니다. 😎대칭키(Symmetric Key) 암호화와 복호화에 같은 암호키(대칭키)를 사용하는 알고리즘대칭키의 장점과 단점장점 키 크기가 상대적으로 작고 암호 알고리즘 내부 구조가 단순하여, 시스템 개발 환경에 용이하고, 비대칭키(공개키) 에 비해 암호화와 복호화 속도가 빠르다.단점 하지만 교환 당사자간에 동일한 키를 공유해야 하기 때문에 키 관리의 어려움이 있고, 잦은 키 변경이 있는 경우 불편하다. 디지털 서명 기법..." }, { "title": "[프로그래머스] SQL 문제 모든 코드", "url": "/posts/SQL-%EB%AC%B8%EC%A0%9C-%EB%AA%A8%EB%93%A0-%EC%BD%94%EB%93%9C/", "categories": "Computer Science, Algorithm", "tags": "프로그래머스, programmers, mysql, MYSQL", "date": "2021-03-08 02:03:30 +0900", "snippet": "❤친 문제는 조금 신경써야할 문제를 체크했습니다.최댓값 구하기문제링크https://programmers.co.kr/learn/courses/30/lessons/59415코드SELECT DATETIME FROM ANIMAL_INS ORDER BY DATETIME DESC LIMIT 1모든 레코드 조회하기문제링크https://programmers.co.kr/learn/courses/30/lessons/59034코드SELECT * FROM ANIMAL_INS ORDER BY ANIMAL_ID역순 정렬하기문제링크https://prog..." }, { "title": "[프로그래머스] 외벽점검 Python (파이썬)", "url": "/posts/%EC%99%B8%EB%B2%BD%EC%A0%90%EA%B2%80-Python-(%ED%8C%8C%EC%9D%B4%EC%8D%AC)/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 프로그래머스, programmers, python, 파이썬", "date": "2021-02-26 11:02:30 +0900", "snippet": "외벽점검2020 KAKAO BLIND RECRUITMENT🤎문제링크 https://programmers.co.kr/learn/courses/30/lessons/60062문제풀이이 문제의 풀이는 완전탐색으로 진행하였다.python 의 itertools 라이브러리를 사용해서 dist 배열의 모든 경우를 다 permutations으로 구했다. 문제 풀이의 순서는 다음과 같다. dist의 모든 경우의 수 구하기 (dists) weak의 시작 지점이 다른 모든 경우 test_weak로 만들기. for 문을 통해 각 ..." }, { "title": "[프로그래머스] 큰수만들기 Python (파이썬)", "url": "/posts/%ED%81%B0%EC%88%98%EB%A7%8C%EB%93%A4%EA%B8%B0-Python-(%ED%8C%8C%EC%9D%B4%EC%8D%AC)/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 프로그래머스, programmers, python, 파이썬", "date": "2021-02-23 19:03:30 +0900", "snippet": "큰 수 만들기문제 링크https://programmers.co.kr/learn/courses/30/lessons/42883문제 풀이각 변수 의미 x : number 중 선택해야 하는 갯수 (ex. 길이가 8인 number에서 2개를 제거해야한다면 5개를 선택해야한다.) start : 탐색을 시작하는 위치 end : 탐색을 끝내는 위치 ans : number 중 가장 큰 값을 찾기 위해 비교 변수 idx : 탐색하는 위치 중 가장 큰 값을 가진 자리의 index풀이 과정 k개 제거가 아닌 x 개를 선택하는 것으로 생각..." }, { "title": "[Database] 데이터베이스 용어 - 릴레이션, 어트리뷰트, 튜플, 도메인, 차수, 카디널리티, 스키마", "url": "/posts/db-%EC%9A%A9%EC%96%B4/", "categories": "Computer Science, Database", "tags": "database, relation, attribute, tuple, domain, degree, cardinality, domain, schema, 릴레이션, 어트리뷰트, 튜플, 도메인, 차수, 카디널리티, 도메인, 스키마", "date": "2021-02-21 19:10:13 +0900", "snippet": "데이터베이스 용어데이터베이스를 공부하다보면 릴레이션, 어트리뷰트, 튜플, 도메인, 차수, 카디널리티, 스키마 등의 용어를 접하게 된다. 나도 DB CS 공부를 하면서 앞서 언급한 용어가 나올때마다 그냥 넘어가곤 하였는데 이번 기회에 완벽히 정리하기로 했다.릴레이션릴레이션이란 관계형 데이터베이스에서 정보를 구분하여 저장하는 기본 단위이다.결국, 릴레이션은 DB 테이블이다. 흔히 개발을 할때 DB 설계를 하게 되는데 ERD (Entity Relationship Diagram) 아래와 같이 구성한다.그래서 이 네모칸 하나하나가 결국..." }, { "title": "[프로그래머스] 자물쇠와 열쇠 Python (파이썬)", "url": "/posts/%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80-%EC%97%B4%EC%87%A0-Python-(%ED%8C%8C%EC%9D%B4%EC%8D%AC)/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 프로그래머스, programmers, python, 파이썬", "date": "2021-02-20 12:13:30 +0900", "snippet": "자물쇠와 열쇠2020 KAKAO BLIND RECRUITMENT🤎문제 링크 https://programmers.co.kr/learn/courses/30/lessons/60059문제 풀이rotate 는 2차원 배열을 회전해주는 함수이고 for r in range(4)를 보면 4번 회전할때마다 각 경우를 구하였다. 일단 lock의 배열을 key값의 length만큼 크기를 확장시켜주었다. 확장시켜주면서 확장시킨 곳은 0으로 초기화하였다. 그리고 check_lock이란 new_lock(lock의 크기를 확장한 배열) 값을 복제시켜주어..." }, { "title": "[Database] 정규화(Normalization) 과정 (1NF, 2NF, 3NF, BCNF)", "url": "/posts/normalization-course/", "categories": "Computer Science, Database", "tags": "normalization, 정규화, 정규화 과정, 1NF, 2NF, 3NF, BCNF", "date": "2021-02-08 22:30:00 +0900", "snippet": "정규화 과정정규화가 무엇인지에 대해 알고싶다면 정규화 를 참고하자.제1 정규화 (1NF)애트리뷰트의 도메인이 오직 원자값만을 포함하고, 튜플의 모든 애트리뷰트가 도메인에 속하는 하나의 값을 가져야 한다. 즉, 복합 애트리뷰트, 다중값 애트리뷰트, 중첩 릴레이션 등 비 원자적인 애트리뷰트들을 허용하지 않는 릴레이션 형태를 말한다. 어떤 Relation에 속한 모든 Domain이 원자값(atomic value)만으로 되어 있다. 모든 attribute에 반복되는 그룹(repeating group)이 나타나지 않는다. 기본 키..." }, { "title": "[Database] 정규화(Normalization)", "url": "/posts/normalization/", "categories": "Computer Science, Database", "tags": "normalization, 정규화, 정규화 장점, 정규화 단점, 함수적 종속", "date": "2021-02-07 14:30:00 +0900", "snippet": "정규화(Normalization)데이터베이스에서 정규화의 정의, 목적, 장점 및 단점, 대상, 과정에 대해 알아보고 함수적 종속의 의미에 대해 알아보자🥴데이터베이스 정규화란?데이터의 중복을 줄이고 무결성을 향상시키는 등 여러 목적을 달성하기 위해서 재디자인하는 것이다. 속성들끼리의 종속 관계를 분석하여 여러개의 릴레이션으로 분해하는 과정 → 데이터베이스의 설계를 재구성하는 테크닉 일반적으로 테이블을 여러개로 분해하면 속도는 상대적으로 느려질 수 있지만, 분해하지 않으면 이상 문제들이 발생한다.즉, 정규화는 릴레이션 내에서 ..." }, { "title": "[OS] 뮤텍스와 세마포어 (Mutex and Semaphore)", "url": "/posts/mutex-semaphore/", "categories": "Computer Science, Operating System", "tags": "뮤텍스, 세마포어, 데커 알고리즘, 피터슨 알고리즘, 제과점 알고리즘, 뮤텍스 세마포어 차이", "date": "2021-02-06 11:12:30 +0900", "snippet": "뮤텍스와 세마포어 (Mutex and Semaphore)뮤텍스와 세마포어의 정의 그리고 뮤텍스의 세가지 알고리즘(데커, 피터슨, 베이커리) 그리고 뮤텍스와 세마포어의 차이점 까지 알아보자.😉여러 프로세스가 동시에 공유 데이터에 접근할 때 접근 순서에 따라 실행 결과가 달라지는 상황에 놓인 프로세스들을 경쟁 상태 (reace condition)에 있다고 한다. 이러한 경쟁 상태를 예방하려면 병행 프로세스들을 동기화해야 하는데, 이는 임계 영역을 이용한 상호배제로 구현할 수 있다.임계 영역 여러 프로세스가 데이터를 공유하며 수행..." }, { "title": "[백준] #17144 미세먼지 안녕! Python (파이썬)", "url": "/posts/17144/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 백준, python, 파이썬", "date": "2021-02-05 15:31:30 +0900", "snippet": "미세먼지 안녕!문제링크https://www.acmicpc.net/problem/17144코드import syssys.stdin = open(&quot;input.txt&quot;,&#39;r&#39;)r,c,t = map(int,input().split())board = [[int(x) for x in input().split()] for _ in range(r)]# 공기 청정기 위치 찾기flag = 0for i in range(r): for j in range(c): if board[i][j] == -1: ..." }, { "title": "[백준] #17837 새로운 게임2 Python (파이썬)", "url": "/posts/17837/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 백준, python, 파이썬", "date": "2021-02-05 07:12:30 +0900", "snippet": "새로운 게임2문제링크https://www.acmicpc.net/problem/17837코드import syssys.stdin = open(&quot;input.txt&quot;,&#39;r&#39;)n, k = map(int,input().split())chess = [[int(x) for x in input().split()] for _ in range(n)]horses = [[int(x) for x in input().split()] for _ in range(k)]board = [[[] for _ in range(n)] ..." }, { "title": "[프로그래머스] N으로 표현 Python (파이썬)", "url": "/posts/N%EC%9C%BC%EB%A1%9C-%ED%91%9C%ED%98%84-Python/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 프로그래머스, programmers, python, 파이썬", "date": "2021-02-04 22:01:30 +0900", "snippet": "N으로 표현문제링크https://programmers.co.kr/learn/courses/30/lessons/42895풀이일단 문제의 포인트는 문제에서 최솟값이 8보다 크면 -1을 return 합니다. 라고 했다. 즉 숫자 1개인 그룹에서 ~ 8개인 그룹만 신경쓰면 된다. 그런데 생각해보면 숫자 1개인 그룹 ~ 숫자 8개인 그룹은 아래와 같이 두개의 그룹을 조합해서 설명할 수 있다.# 1 : (1)# 2 : (0+2, 1+1)# 3 : (0+3, 1+2)# 4: (0+4, 1+3, 2+2)# 5: (0+5, 1+4, 2+3..." }, { "title": "[OS] 프로세스 스케줄링 (공룡책)", "url": "/posts/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81/", "categories": "Computer Science, Operating System", "tags": "공룡책, operating system concepts, 프로세스, 프로세스 스케줄링, 스케줄링 큐", "date": "2021-02-04 16:03:00 +0900", "snippet": "Chapter 3 프로세스본 설명은 책 “Operating System Concepts (공룡책)”를 읽으며 제 나름대로 해석하고 정리해 보았습니다.😉3.2 프로세스 스케줄링일괄 처리 시스템과 다르게 다중 프로그래밍 시스템은 CPU 이용률을 최대화 하기 위해 어떤 프로세스가 실행 되도록 하는 것이 목적이다. 이 목적을 달성하기 위해서는 프로세스 스케줄러가 실행할 하나의 프로세스를 잘 선택해야 한다. 참고로 단일 CPU 코어의 경우는 하나의 프로세스만 실행할 수 있는 반면, 다중 코어는 2개 이상의 프로세스를 실행할 수 있다. ..." }, { "title": "[OS] 프로세스의 관리", "url": "/posts/OS-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%9D%98-%EA%B4%80%EB%A6%AC/", "categories": "Computer Science, Operating System", "tags": "그림으로 배우는 구조와 원리 운영체제, chapter 03 프로세스와 스레드, 프로세스 관리, 프로세스 구조, 프로세스 생성, 프로세스 종료, 프로세스 제거, 프로세스의 중단과 재시작, 프로세스 우선순위, 프로세스 문맥교환", "date": "2021-02-02 12:53:00 +0900", "snippet": "02 프로세스의 관리본 설명은 책 “그림으로 배우는 구조와 원리 운영체제 개정 3판”를 읽으며 제 나름대로 해석하고 정리해 보았습니다.😉공룡책 버전의 설명이 궁금하다면 ? (https://hoyeonkim795.github.io/posts/프로세스의이해/)1. 프로세스의 구조운영체제는 프로세스에서 생성, 종료, 제거, 중단, 재시작, 우선순위 변경, 대기, 문맥 교환 등 다양한 작업을 수행할 수 있다. 먼저 해당 작업들을 알아가기 전에 프로세스의 구조에 대해 살펴보자.프로세스는 실행 중에 프로세스 생성 시스템 호출을 이용하여..." }, { "title": "[OS] 프로세스 제어 블록 (PCB), 문맥 교환 (Context Switching)", "url": "/posts/pcb/", "categories": "Computer Science, Operating System", "tags": "그림으로 배우는 구조와 원리 운영체제, chapter 03 프로세스와 스레드, 프로세스 제어블록, PCB, 문맥교환, context switching, 공룡책", "date": "2021-02-01 17:13:00 +0900", "snippet": "프로세스 제어 블록, Context switching본 설명은 책 “그림으로 배우는 구조와 원리 운영체제 개정 3판”와 “Operating System Concepts(공룡책)” 를 읽으며 제 나름대로 해석하고 정리해 보았습니다.😉프로세스 제어 블록운영체제가 프로세스를 제어할 때 필요한 프로세스 상태 정보는 프로세스 제어 블록에 저장된다.따라서, 프로세스가 생성되면 메모리에 프로세스 제어 블록을 생성하고, 프로세스가 실행을 종료하면 해당 프로세스 제어 블록도 삭제한다.위의 그림과 같은 정보가 들어 있는데, 운영체제의 모든 모듈..." }, { "title": "[OS] 프로세스의 개념", "url": "/posts/process_concept/", "categories": "Computer Science, Operating System", "tags": "그림으로 배우는 구조와 원리 운영체제, chapter 03 프로세스와 스레드, 프로세스 생명주기, 프로세스, 프로세스 개념, 프로세스 구조, 프로세스 메모리 구조, 프로세스 상태", "date": "2021-02-01 11:13:00 +0900", "snippet": "01 프로세스의 개념과 상태 변화본 설명은 책 “그림으로 배우는 구조와 원리 운영체제 개정 3판”를 읽으며 제 나름대로 해석하고 정리해 보았습니다.😉1. 프로세스의 개념먼저, 프로세스의 개념을 알기 전에 프로세스의 개념이 언제부터 등장했는지 살펴보자. 초기에 컴퓨터는 프로그램을 한번에 하나씩 실행했기 때문에 한 프로그램이 자원을 독점했었다. 그러다 다중 프로그래밍의 환경이 생기면서 여러 프로그램을 메모리에 적재하여 병행 실행할 수 있게 되었다. 때문에 프로그램들은 컴퓨터 자원을 공유하기에 이를 제어하는 방법이 필요했고, 이 과..." }, { "title": "[백준] #17143 낚시왕 python (파이썬)", "url": "/posts/17143/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 백준, python, 파이썬", "date": "2021-01-30 10:18:20 +0900", "snippet": "낚시왕문제링크https://www.acmicpc.net/problem/17143코드from copy import deepcopyimport syssys.stdin = open(&quot;input.txt&quot;,&#39;r&#39;)R, C, M = map(int,input().split())board = [[0]*C for _ in range(R)]for _ in range(M): r,c,s,d,z = map(int,input().split()) board[r-1][c-1] = [s,d,z] #속력, 이동방향,..." }, { "title": "[백준] #17822 원판돌리기 Python (파이썬)", "url": "/posts/17822/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 백준, python, 파이썬", "date": "2021-01-29 19:22:30 +0900", "snippet": "원판돌리기문제링크https://www.acmicpc.net/problem/17822코드import sysfrom collections import dequesys.stdin = open(&quot;input.txt&quot;,&#39;r&#39;)n,m,t = map(int,input().split()) #원판의 개수, 원판에 적힌 정수의 개수, T 번 회전board = [deque(int(x) for x in input().split()) for _ in range(n)]info = [[int(x) for x in input..." }, { "title": "[백준] #20056 마법사 상어와 파이어볼 Python (파이썬)", "url": "/posts/20056/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 백준, python, 파이썬", "date": "2021-01-29 04:18:20 +0900", "snippet": "마법사 상어와 파이어볼문제링크https://www.acmicpc.net/problem/20056코드import syssys.stdin = open(&quot;input.txt&quot;,&#39;r&#39;)N, M, K = map(int, input().split())# r c m s dboard = [[[] for _ in range(N)] for _ in range(N)]info = []for _ in range(M): r,c,m,s,d = map(int,input().split()) board[r-1][c-1..." }, { "title": "[OS] 교착상태 회복 탐지 알고리즘", "url": "/posts/%ED%83%90%EC%A7%80%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/", "categories": "Computer Science, Operating System", "tags": "deadlock, 교착상태, 교착 상태 회복, 탐지 알고리즘, 그림으로 배우는 구조와 원리 운영체제", "date": "2021-01-28 16:01:30 +0900", "snippet": "본 설명은 책 “그림으로 배우는 구조와 원리 운영체제 개정 3판”를 읽으며 제 나름대로 해석하고 정리해 보았습니다.😉교착 상태 탐지 알고리즘교착 상태 탐지 알고리즘은 교착 상태 회복을 위한 알고리즘으로 교착상태에 대해 더 자세히 알고 싶다면교착상태란? 링크를 참고하자.교착 상태 탐지 알고리즘의 자료구조교착 상태 탐지 알고리즘은 쇼사니와 코프만이 제안했다. 교착 상태 탐지알고리즘 또한 은행가 알고리즘에서 사용한 자료구조들과 비슷하다. (은행원 알고리즘이 궁금하다면 ? ✨ 은행가 알고리즘) Available : 각 형..." }, { "title": "[OS] 은행원 알고리즘 (예시문제 까지)", "url": "/posts/bankers/", "categories": "Computer Science, Operating System", "tags": "deadlock, 교착상태, 교착상태 회피, 은행원 알고리즘, 그림으로 배우는 구조와 원리 운영체제", "date": "2021-01-27 05:32:30 +0900", "snippet": "본 설명은 책 “그림으로 배우는 구조와 원리 운영체제 개정 3판”를 읽으며 제 나름대로 해석하고 정리해 보았습니다.😉은행원 알고리즘은행가(은행원) 알고리즘은 자원의 할당 허용 여부를 결정하기 전에 미리 결정된 모든 자원의 최대 가능한 할당량을 시뮬레이션하여 안전 여부를 검사한다. 그런 다음 대기 중인 다른 모든 활동의 교착 상태 가능성을 조사하여 “안정 상태” 여부를 검사 확인한다.은행원 알고리즘이 어디서 나온 개념인지 궁금하다면 교착상태 해결 방법 를 참고하자. 지금부터는 은행원 알고리즘에 필요한 자료가 무엇이 있는지 그리고..." }, { "title": "[OS] 교착상태 해결 방법 예방, 회피, 탐지", "url": "/posts/%EA%B5%90%EC%B0%A9%EC%83%81%ED%83%9C%ED%95%B4%EA%B2%B0%EB%B0%A9%EB%B2%95/", "categories": "Computer Science, Operating System", "tags": "deadlock, 교착상태, 교착상태 예방, 교착상태 회피, 교착상태 탐지", "date": "2021-01-27 02:12:30 +0900", "snippet": "교착 상태 해결 방법본 설명은 책 “그림으로 배우는 구조와 원리 운영체제 개정 3판”를 읽으며 제 나름대로 해석하고 정리해 보았습니다.😉교착 상태 문제를 해결하는 방법은 크게 네가지이다. 예방 (Prevention) : 교착 상태가 생길 조건을 없애는 것 (4가지 조건 중 하나를 부정) 회피 (Avoidance) : 교착 상태의 발생 가능 성을 배제하지 않고 적절히 회피한다. 탐지 (detaction) : 교착 상태를 허용하지만 상태를 탐지하고 다시 회복하는 방법 무시: 그냥 무시하고 오히려 교착상태를 해결하는 것 보다..." }, { "title": "[Web] REST의 특징과 RESTful API", "url": "/posts/restful_api/", "categories": "Computer Science, Web", "tags": "rest api, web, restful api, rest", "date": "2021-01-26 10:12:30 +0900", "snippet": "RESTful API이전 포스트에서 REST API란 무엇인지에 대해 알아보았습니다. 오늘은 REST의 특징 그리고 RESTful API에 대해 알아보겠습니다.REST의 특징REST의 특징은 총 6개로 Uniform Interface Stateless Caching Self-descriptiveness Client-Server Hierarchical system가 있다.1. Uniform InterfaceUniform Interface는 HTTP 표준만 맞는다면, URI로 지정한 리소스에 대한 동작을 통일되게 하고,..." }, { "title": "[Web] REST API 란? ( GET과 POST의 차이 )", "url": "/posts/rest_api/", "categories": "Computer Science, Web", "tags": "rest api, network, api, get과 post의 차이", "date": "2021-01-25 22:32:30 +0900", "snippet": "REST API 탄생 배경2000년에 로이 필딩(Roy Fielding)은 UC 어바인에서 “Architectural Styles and the Design of Network-based Software Architectures”라는 제목의 2000년 박사 학위 논문에 REST를 정의하였다. 그는 1996년부터 1999년까지 HTTP 1.0의 기존 디자인에 기반을 둔 HTTP 1.1와 병행하여 REST 구조의 스타일을 개발하였다.그래서 REST API가 뭔데?나 또한 SSAFY에서 웹 개발 프로젝트를 시작하면서 REST API..." }, { "title": "[Algorithm] 정렬 알고리즘 (Bubble Sort, Selection Sort, Insertion sort, Counting sort, Merge Sort, Quick sort, Python Sort) 기본 개념과 Python 코드", "url": "/posts/%EC%A0%95%EB%A0%AC%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/", "categories": "Computer Science, Algorithm", "tags": "python, 파이썬, bubble sort, selection sort, insertion sort, counting sort, merge Sort, quick sort, python sort", "date": "2021-01-25 14:02:30 +0900", "snippet": "정렬알고리즘 (Python 코드까지)Bubble Sort, Selection Sort, Insertion sort, Counting sort, Merge Sort, Quick sort, Python Sort 의 기본적인 개념과 Python 코드 그리고 시간복잡도까지 알아보자.먼저 설명에 앞서, 각 정렬별 시간복잡도를 살펴보면 아래와 같다.1. Bubble sortn 개의 원소를 가진 배열을 정렬할 때, In-place sort 로 인접한 두 개의 데이터를 비교해가면서 정렬을 진행하는 방식이다. 가장 큰 값을 배열의 맨 끝에다 ..." }, { "title": "[백준] #20061 모노미노도미노2 Python (파이썬)", "url": "/posts/20061-%EB%AA%A8%EB%85%B8%EB%AF%B8%EB%85%B8%EB%8F%84%EB%AF%B8%EB%85%B82-python-%ED%8C%8C%EC%9D%B4%EC%8D%AC/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 백준, python, 파이썬", "date": "2021-01-24 16:22:30 +0900", "snippet": "모노미노도미노2문제링크https://www.acmicpc.net/problem/20061코드import syssys.stdin = open(&quot;input.txt&quot;,&#39;r&#39;)n = int(input())# 빨간 보드 red_green = [[0]*4 for _ in range(10)]# 초록 보드# 파란 보드red_blue = [[0]*10 for _ in range(4)]# 빨간 + 초록 # 빨강의 경계선(행) 까지 간다음에.. 끝까지..# 한칸씩 내려가기 부딪히면 전으로 돌아가는거# 특별한 행에 ..." }, { "title": "[백준] #20055 컨베이어 벨트 위의 로봇 Python (파이썬)", "url": "/posts/20055-%EC%BB%A8%EB%B2%A0%EC%9D%B4%EC%96%B4-%EB%B2%A8%ED%8A%B8-%EC%9C%84%EC%9D%98-%EB%A1%9C%EB%B4%87-Python-(%ED%8C%8C%EC%9D%B4%EC%8D%AC)/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 백준, python, 파이썬", "date": "2021-01-24 12:01:30 +0900", "snippet": "컨베이어 벨트 위의 로봇문제링크https://www.acmicpc.net/problem/20055코드import sysfrom collections import dequesys.stdin = open(&quot;input.txt&quot;,&#39;r&#39;)n,k = map(int,input().split())arr = deque(list(map(int,input().split())))ans = 1robot = deque(list([0]*n))while True: # 내구도가 0인 칸의 개수가 K개 이상이라면 과정을..." }, { "title": "[백준] #19237 어른 상어 Python (파이썬)", "url": "/posts/19237-%EC%96%B4%EB%A5%B8-%EC%83%81%EC%96%B4-Python-(%ED%8C%8C%EC%9D%B4%EC%8D%AC)/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 백준, python, 파이썬", "date": "2021-01-24 00:31:30 +0900", "snippet": "어른 상어문제링크https://www.acmicpc.net/problem/19237풀이import syssys.stdin = open(&#39;input.txt&#39;,&#39;r&#39;)from copy import deepcopyn, m, k = map(int,input().split())# 상어의 번호를 담느 격자board = [[int(x) for x in input().split()] for _ in range(n)]# 냄새 영역 표시# [0,-1] 의 의미는 냄새가 0 이고 -1 은 그 냄새 뿌린 상어의 번호가 ..." }, { "title": "[OS] 교착 상태(deadlock)의 개념과 발생 원인", "url": "/posts/%EA%B5%90%EC%B0%A9%EC%83%81%ED%83%9C%EC%9D%98-%EA%B0%9C%EB%85%90%EA%B3%BC-%EB%B0%9C%EC%83%9D%EC%9B%90%EC%9D%B8/", "categories": "Computer Science, Operating System", "tags": "그림으로 배우는 구조와 원리 운영체제, deadlock, 교착상태", "date": "2021-01-23 16:12:00 +0900", "snippet": "01 교착 상태의 개념과 발생 원인본 설명은 책 “그림으로 배우는 구조와 원리 운영체제 개정 3판”를 읽으며 제 나름대로 해석하고 정리해 보았습니다.1. 교착 상태의 개념다중 프로그래밍 시스템에서는 프로세스가 결코 일어나지 않을 사건을 기다리는 상태가 되면 교착상태(deadlock)에 빠졌다고 말한다. 만약 이 교착상태가 일어났음에도 운영체제가 해결하지 못할 경우 사용자 혹은 시스템 운영자가 작업을 교체하거나 외부 간섭으로 해결해야한다.그렇다면 교착 상태는 언제 일어날까?교착 상태는 시스템 자원에 요구가 뒤엉킨 상태로, 두 프..." }, { "title": "[백준] #16236 아기 상어 Python (파이썬)", "url": "/posts/%EC%95%84%EA%B8%B0%EC%83%81%EC%96%B4/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 백준, python, 파이썬", "date": "2021-01-22 17:31:30 +0900", "snippet": "아기 상어문제링크https://www.acmicpc.net/problem/16236풀이import syssys.stdin = open(&quot;input.txt&quot;,&#39;r&#39;)from collections import dequen = int(input())board = [[int(x) for x in input().split()] for _ in range(n)]queue = deque()# 상어의 좌표 찾고 queue 만들기for i in range(n): flag = 0 for j in ran..." }, { "title": "[Network] 데이터 송수신하는 프로토콜 스택", "url": "/posts/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%86%A1%EC%88%98%EC%8B%A0_%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C%EC%8A%A4%ED%83%9D/", "categories": "Computer Science, Network", "tags": "성공과 실패를 결정하는 1%의 네트워크 원리, chapter 01 웹 브라우저가 메시지를 만든다", "date": "2021-01-19 16:20:00 +0900", "snippet": "04 프로토콜 스택에 메시지 송신을 의뢰한다.본 설명은 책 “성공과 실패를 결정하는 1%의 네트워크 원리”를 읽으며 제 나름대로 해석하고 정리해 보았습니다.1. 데이터 송수신 동작의 개요이제 IP 주소를 알았으면 엑세스 대상 웹서버에 메시지를 송신하도록 OS 내부에 있는 프로토콜 스택에 의뢰를 한다. 데이터를 송 수신 하는 동작은 단연 브라우저 뿐 아니라 네트워크를 이용하는 애플리케이션 전체의 공통이다.이 동작에서도 DNS 서버에 IP 주소를 조회할때처럼 Socket 라이브러리에 들어있는 프로그램 부품을 이용한다. 본 동작은..." }, { "title": "[Network] 전세계 DNS 서버들은 어떻게 연동할까?", "url": "/posts/DNS%EC%84%9C%EB%B2%84%EC%97%B0%EB%8C%80/", "categories": "Computer Science, Network", "tags": "성공과 실패를 결정하는 1%의 네트워크 원리, chapter 01 웹 브라우저가 메시지를 만든다", "date": "2021-01-19 02:03:00 +0900", "snippet": "03 전 세계의 DNS 서버가 연대한다.본 설명은 책 “성공과 실패를 결정하는 1%의 네트워크 원리”를 읽으며 제 나름대로 해석하고 정리해 보았습니다.1. DNS 서버의 기본동작DNS 서버의 기본 동작은 클라이언트에서 조회 메세지를 받고 조회의 내용을 응답하는 형태로 정보를 회답하는 일이다. 조회 메세지에는 세가지의 정보가 포함되어있는데1) 이름 : 서버나 매일 배송 목적지(메일에서 @뒷부분)와 같은 이름2) 클래스 : 현재는 인터넷 이와의 네트워크가 없으므로 클래스는 항상 인터넷을 나타내는 ‘IN’ 이라는 값3) 타입 : 이..." }, { "title": "[백준] #20057 마법사 상어와 토네이도 Python (파이썬)", "url": "/posts/%EB%A7%88%EB%B2%95%EC%82%AC%EC%83%81%EC%96%B4%EC%99%80%ED%86%A0%EB%84%A4%EC%9D%B4%EB%8F%84/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 백준, python, 파이썬", "date": "2021-01-18 13:11:30 +0900", "snippet": "마법사 상어와 토네이도문제링크https://www.acmicpc.net/problem/20057풀이import syssys.stdin = open(&quot;input.txt&quot;,&#39;r&#39;)n = int(input())board = [[int(x) for x in input().split()] for _ in range(n)]ans = 0 # 격자 바깥으로 나간 모래의 양# 바람의 방향에 따른 모래 비율rate_left = [[0,0,2,0,0],[0,10,7,1,0],[5,&#39;a&#39;,0,0,0],..." }, { "title": "[Network] 어떻게 DNS 서버가 IP 주소를 조회할까", "url": "/posts/DNS%EC%84%9C%EB%B2%84%EC%99%80_IP%EC%A3%BC%EC%86%8C/", "categories": "Computer Science, Network", "tags": "성공과 실패를 결정하는 1%의 네트워크 원리, chapter 01 웹 브라우저가 메시지를 만든다", "date": "2021-01-18 12:03:00 +0900", "snippet": "02 웹서버의 IP 주소를 DNS 서버에 조회한다.본 설명은 책 “성공과 실패를 결정하는 1%의 네트워크 원리”를 읽으며 제 나름대로 해석하고 정리해 보았습니다.1. IP 주소의 기본브라우저가 HTTP 리퀘스트 메시지를 만들지만, 메시지를 네트워크에 송출할 수 는 없다. 따라서 이를 OS에 의뢰하여 송신하는데, 이때 URL 에 써있는 도메인명 즉, IP 주소 값을 알아야한다. (즉, 내가 편지를 부친다고 치면 우체부(OS)가 편지를 배달하기 위해 편지에 적혀져있는 주소(IP)를 확인하는 것이다).먼저, 이 개념을 설명하기 전에..." }, { "title": "[Network] HTTP 리퀘스트 메시지", "url": "/posts/HTTP%EB%A6%AC%ED%80%98%EC%8A%A4%ED%8A%B8%EB%A9%94%EC%8B%9C%EC%A7%80/", "categories": "Computer Science, Network", "tags": "성공과 실패를 결정하는 1%의 네트워크 원리, chapter 01 웹 브라우저가 메시지를 만든다", "date": "2021-01-17 17:33:00 +0900", "snippet": "HTTP 리퀘스트 메시지를 작성한다본 설명은 책 “성공과 실패를 결정하는 1%의 네트워크 원리”를 읽으며 제 나름대로 해석하고 정리해 보았습니다.1. 탐험 여행은 URL 입력 부터 시작한다.브라우저는 웹 서버에 액세스 하는 클라이언트 뿐 아니라 파일을 다운로드하고 업로드하는 FTP의 클라이언트 기능이나 메일의 클라이언트 기능도 가지고 있다. FTP(File Transfer Protocol파일을 업로드하거나 다운로드 할 때 사용하는 프로토콜, FTP 프로토콜을 이용하여 파일 전송을 하는 프로그램도 ‘FTP’ 라 부른다.따라서 ..." }, { "title": "[OS] 프로세스의 이해 (공룡책)", "url": "/posts/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%9D%98%EC%9D%B4%ED%95%B4/", "categories": "Computer Science, Operating System", "tags": "공룡책", "date": "2021-01-13 13:21:30 +0900", "snippet": "프로세스의 이해3.1 Process Concept프로세스 실행 중인 프로그램 OS에서 작업의 단위가 프로세스다 하나의 프로세스가 실행되기 위해서는 자원이 필요하다. cpu time memory files and I/O devices 메모리 레이아웃 Text section : 실행코드 Data section : 전역변수 Heap section : 동적 메모리들 Stack section : function parameters, return address , 지역변수프..." }, { "title": "[백준] #17779 게리맨더링2 Python (파이썬)", "url": "/posts/%EA%B2%8C%EB%A6%AC%EB%A7%A8%EB%8D%94%EB%A7%812/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 백준, python, 파이썬", "date": "2021-01-13 03:21:30 +0900", "snippet": "게리맨더링2문제링크https://www.acmicpc.net/problem/17779처음에 시간초과 나와서 굉장히 당황한 문제.. 잘못된 알고리즘 이었다..!!!!먼저 5구역을 경계선 범위를 기준으로 체크해준 뒤1,2,3,4 구역이 각각 5구역을 만났을때 break 해서 다음행을 실행하는 방식으로구역을 나누었다.그리고 1,2,3,4 각 구역을 탐색할때 각 구역의 합을 구했고 5구역의 경우 경계선만 체크 되기 때문에전체합에서 1,2,3,4 값을 빼주었다.풀이코드import syssys.stdin = open(&quot;input..." }, { "title": "[백준] #19236 청소년 상어 Python (파이썬)", "url": "/posts/%EC%B2%AD%EC%86%8C%EB%85%84%EC%83%81%EC%96%B4/", "categories": "Computer Science, Algorithm", "tags": "삼성역량테스트, 백준, python, 파이썬", "date": "2021-01-13 00:01:30 +0900", "snippet": "청소년 상어문제 링크https://www.acmicpc.net/problem/19236풀이 코드from copy import deepcopyimport syssys.stdin = open(&#39;input.txt&#39;,&#39;r&#39;)old_board = [[int(x) for x in input().split()] for _ in range(4)]board = [[(0,0) for _ in range(4)] for _ in range(4)]for i in range(4): for j in range(4): ..." }, { "title": "[OS] 운영체제란? (공룡책)", "url": "/posts/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C%EB%9E%80/", "categories": "Computer Science, Operating System", "tags": "공룡책", "date": "2021-01-12 23:21:30 +0900", "snippet": "Operating System컴퓨터 시스템을 운영하는 소프트웨어를 운영체제 라 한다.그럼 컴퓨터는 무엇일까? A machine that processes the information 정보를 처리하는 기계이다. 정보 정의 (클로드 섀넌) I(x) = - log2P(x) 정보량은 x란 사건이 발생할 사건의 확률에 -log2를 붙인 값이다. 어떤 불확실한 상황을 측정해서 그것을 수치적으로 표현한 것을 정보라 한다. 컴퓨터가 정보를 어떻게 처리할까? 정보의 최소 단위 : b..." }, { "title": "[OS] 운영체제의 개념과 구조", "url": "/posts/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C%EA%B5%AC%EC%A1%B0/", "categories": "Computer Science, Operating System", "tags": "공룡책", "date": "2021-01-12 22:31:00 +0900", "snippet": "Introduction &amp;amp; O/S Structures1.1 What Operating Systems Do컴퓨터 시스템 Hardware Operating system Application programs A user 1.2 Computer-System Organization운영체제의 정의 common definition : 항상 러닝하고 있는 프로그램이며 가장 중요한 개념은 Kernel 이다. 현대의 컴퓨터 시스템은 아래와 같이 구성되어있다. ### Interrupts ..." }, { "title": "[Network] 통신네트워크 장비", "url": "/posts/%ED%86%B5%EC%8B%A0%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%9E%A5%EB%B9%84/", "categories": "Computer Science, Network", "tags": "", "date": "2020-12-19 19:20:00 +0900", "snippet": "통신 네트워크 장비 더미허브(Dummy Hub) 스위치 허브(Switching Hub) 증폭기(Repeater) 브리지(Bridge) 라우터(Router) 게이트웨이(Gateway) Softswitch더미허브 허브는 여러개의 단말 장치가 하나의 근거리 통신망(LAN)에 접속할 수 있도록 지원하는 중계 장치이다. 몇개의 터미널들이 하나의 통신회선을 통하여 결합된 형태로 신호를 전송하고 이를 수신측에서 다시 몇 개의 터미널의 신호로 분리하여 컴퓨터에 입력할 수 있도록 하는 기술로 다중화기라고도 한..." }, { "title": "[Network] RAID가 뭐에요?(RAID 0, RAID 1, RAID 5 차이)", "url": "/posts/RAID/", "categories": "Computer Science, Network", "tags": "raid", "date": "2020-12-19 17:30:00 +0900", "snippet": "RAID란여러대의 하드디스크가 있을 때 동일한 데이터를 다른 위치에 중복해서 저장하는 방법으로 여러개의 하드디스크를 마치 하나의 하드디스크처럼 사용하는 것으로 입출력 속도 및 안정성을 개선시킨 기술 장치이다.즉, 저렴한 하드디스크의 장점을 이용해 여러개의 하드디스크를 하나로 취급하자라는 생각에서 나온것이 RAID이다.RAID의 종류들은 다음과 같다. RAID-0 RAID-1 RAID-2 RAID-3 RAID-5 RAID-4 RAID-6 RAID-SAFE33 RAID-SAFE50 RAID-1+0 RAID-0+..." }, { "title": "[Database] 정규화(Normalization)", "url": "/posts/%EC%A0%95%EA%B7%9C%ED%99%94/", "categories": "Computer Science, Database", "tags": "normalization", "date": "2020-12-16 17:30:00 +0900", "snippet": "정규화(Normalization) 란?관계형 모델에서 정규화 이론이라는 DB 설계 이론이 있다.정규화 이론은 RDB를 효율적으로 잘 다루는데 있어 필요한 과정이며, 관계형 모델을 전제로 구축된 DB 설계 이론이다.정규화를 간단하게 말하자면 정규화는 릴레이션 내에서 중복을 제거하는 과정이다.정규화 과정, 즉 중복 제거를 통해 얻을 수 있는 이점은 다음과 같다. 응용프로그램 단에서 불필요한 로직을 없앨 수 있다. 올바른 데이터만 얻을 수 있다.(변칙 방지) 불필요한 쿼리(예를들면, 서브 쿼리) 제거로 성능 향상" }, { "title": "[Database] 트랜잭션(Transaction)", "url": "/posts/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98/", "categories": "Computer Science, Database", "tags": "transaction", "date": "2020-12-15 16:11:00 +0900", "snippet": "트랜잭션(Transaction)이란 ?트랜잭션은 작업의 완전성 을 보장해주는 것이다. 즉, 논리적인 작업 셋을 모두 완벽하게 처리하거나 또는 처리하지 못할 경우에는 원 상태로 복구해서 작업의 일부만 적용되는 현상이 발생하지 않게 만들어주는 기능이다. 사용자의 입장에서는 작업의 논리적 단위로 이해를 할 수 있고 시스템의 입장에서는 데이터들을 접근 또는 변경하는 프로그램의 단위가 된다.그냥 쉽게 말해서 데이터베이스의 상태를 변화시키기 위해 수행하는 작업 단위 이다.그렇다면 상태를 변화시킨다는건 ? -&amp;gt; sql 질의어..." }, { "title": "[Database] 데이터베이스의 이상현상", "url": "/posts/%EC%9D%B4%EC%83%81/", "categories": "Computer Science, Database", "tags": "anomaly", "date": "2020-12-14 11:01:00 +0900", "snippet": "이상 현상(Anomaly)잘못된 테이블 설계로 인해 Anomaly(이상현상)이 나타난다. 이런 이상 현상은 크게 갱신 이상(Modification Anomaly), 삽입 이상(Insertion Anomaly), 삭제 이상(Deletion Anomaly) 으로 구성된다. 각각을 간략하게 설명하자면, 갱신 이상(Modification Anomaly): 반복된 데이터 중에 일부를 갱신 할 시 데이터의 불일치가 발생한다. 삽입 이상(Insertion Anomaly): 불필요한 정보를 함께 저장하지 않고서는 어떤 정보를 저장하는 것..." }, { "title": "[Database] SQL vs NoSQL", "url": "/posts/SQL-vs-NoSQL/", "categories": "Computer Science, Database", "tags": "sql", "date": "2020-12-13 21:10:00 +0900", "snippet": "SQL 과 NoSQL 의 차이SQLSQL은 Structured Query Language의 약자로 데이터베이스에서 사용하는 쿼리 언어 입니다. SQL을 사용하여 RDBMS에서 데이터를 검색, 저장, 수정, 삭제 등이 가능합니다. RDBMS는 Relational Database Management System으로 말 그대로 관계형 데이터베이스 관리 시스템입니다. RDBMS는 정해져있는 데이터 스키마에 따라 데이터베이스 테이블에 저장되며, 관계를 통한 테이블간 연결을 통해 사용됩니다. 이 때문에 RDBMS는 데이터 관리를 효율적으..." }, { "title": "[Network] 실생활 예로 이해하는 Blocking Non-Blocking IO", "url": "/posts/BLOCKING-AND-NONBLOCKING/", "categories": "Computer Science, Network", "tags": "blocking", "date": "2020-12-13 11:10:13 +0900", "snippet": "# Blocking I/O &amp;amp; Non-Blocking I/OI/O 란?입출력 장치로 부터 어떤 데이터를 주거나 보내는 역할.동기 &amp;amp; 비동기 : 흐름의 관점블러킹 &amp;amp; 넌 블러킹: 제어권의 관점Blocking / Non-blocking행위자가 취한 행위 자체가, 또는 그 행위로 인해 다른 무엇이 막혀버린, 제한된, 대기하는 상태. 대개의 경우에는 나 이외의 대상으로 하여금 내가 Block 당하겠지만(Blocked), 어찌 되었든 문자 자체로는 나라는 단일 개체 스스로의 상태 를 나타냅니다..." }, { "title": "[Database] INJECTION", "url": "/posts/SQL-INJECTION/", "categories": "Computer Science, Database", "tags": "injection", "date": "2020-12-12 21:10:13 +0900", "snippet": "SQL INJECTION 이란?악의적인 사용자가 보안상 취약점을 이용해서, 임의의 SQL 문을 주입하고 실행되게 해서 데이터베이스가 비정상적인 동작을 하도록 조장하는 행위이다. 인젝션 공격은 OWASP Top10 중 첫 번째에 속해 있으며, 공격이 비교적 쉬운 편이고 공격에 성공할 경우 큰 피해를 입힐 수 있는 공격이다.SQL INJECTIO 공격 종류 및 방법1) 인증 우회보통 로그인을 할 때, 아이디와 비밀번호를 input 창에 입력하게 된다. 쉽게 이해하기 위해 가벼운 예를 들어보자. 아이디가 abc, 비밀번호가 만약 1..." }, { "title": "[Network] 쿠키 세션 캐시 차이점", "url": "/posts/%EC%BA%90%EC%8B%9C%EC%BF%A0%ED%82%A4%EC%84%B8%EC%85%98/", "categories": "Computer Science, Network", "tags": "cookies, session, cashe", "date": "2020-12-11 21:10:13 +0900", "snippet": "쿠키란? 쿠키는 클라이언트 로컬에 저장되는 키와 값이 들어있는 작은 데이터 파일이다. 사용자 인증이 유효한 시간을 명시할 수 있으며, 유효 시간이 정해지면 브라우저가 종료되어도 인증이 유지된다는 특징이 있다. 쿠키는 클라이언트의 상태 정보를 로컬에 저장했다가 참조한다. 클라이언트에 300개 까지 쿠키 저장가능, 하나의 도메인당 20개의 값만 가질 수 있음, 하나의 쿠키 값은 4KB까지 저장한다. Response Header에 Set-Cookie 속성을 사용하면 클라이언트에 쿠키를 만들 수 있다. 쿠키는 사용자가 따로..." }, { "title": "[Database] 키(Key) 개념과 종류", "url": "/posts/%ED%82%A4-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EC%A2%85%EB%A5%98/", "categories": "Computer Science, Database", "tags": "database_key", "date": "2020-12-11 19:10:13 +0900", "snippet": "키의 개념키(key) 란 데이터 베이스에서 조건에 만족하는 튜플을 찾거나 순서대로 정렬할 때 기준이 되는 속성을 말한다.이 키가 왜 필요한지에 대한 이유는 바로 중복이 되지 않고 이상 현상 (삽입 이상, 수정 이상, 삭제 이상 등) 을 방지 하기 위해서이다. 결국에 어떤 특정 데이터를 검색하거나 정렬을 하고 싶을 때 이 키(key) 라는 녀석으로 내가 원하는 값을 얻고 식별 할 수 있는 것이다.키의 종류키의 종류에는 크게 기본키(Primary key), 후보키(Candidate key), 대체키(Alternate key), ..." }, { "title": "[Database] Join 이란, join의 종류, inner join과 outer join의 차이점", "url": "/posts/SQL-JOIN/", "categories": "Computer Science, Database", "tags": "join", "date": "2020-12-11 17:10:13 +0900", "snippet": "SQL 에서 Join 이란?관계형데이터베이스는 중복 데이터를 피하기 위해서 데이터를 여러개의 테이블로 나눠서 저장하게 된다. 이렇게 분리되어 저장된 데이터를 사용자가 원하게끔 다시 도출하기 위해서 여러 테이블을 조합해야할 때가 있다. 이때 SQL의 join을 통해서 이를 만들 수 있게된다.Join의 종류 INNER JOIN LEFT OUTER JOIN RIGHT OUTER JOIN FULL OUTER JOIN CROSS JOIN SELF JOIN INNER JOIN 교집합으로, 기준 ..." }, { "title": "[Database] 인덱스 (Index)", "url": "/posts/%EC%9D%B8%EB%8D%B1%EC%8A%A4/", "categories": "Computer Science, Database", "tags": "index", "date": "2020-12-10 19:10:13 +0900", "snippet": "인덱스(Index)란?인덱스는 테이블의 동작 속도를 높여주는 자료 구조로, 인덱스로 데이터의 위치를 빠르게 찾아주는 역할을 한다. 쉽게 생각하면 List, Array에서도 우리가 Index를 사용해서 특정 값을 찾아내듯이 DB에서도 마찬가지 인 것이다.데이터베이스 안의 레코드를 처음부터 풀스캔하지 않고, B+ Tree로 구성된 구조에서 Index 파일 검색으로 속도를 향상시키는 기술이다.무조건 인덱스를 많이 설정하면 좋은걸까?인덱스는 하나 혹은 여러 개의 컬럼에 대해 설정할 수 있다. 단일 인덱스를 여러 개 생성 할 수도, 여..." }, { "title": "[Network] HTTP와 HTTPS 개념 및 차이", "url": "/posts/HTTP-vs-HTTPS/", "categories": "Computer Science, Network", "tags": "network", "date": "2020-12-03 22:10:13 +0900", "snippet": "HTTP 란?HTTP는 HTML 문서와 같은 리소스들을 가져올 수 있도록 해주는 프로토콜이다. 프로토콜은 데이터를 주고받는 상호간에 미리 약속된 규칙으로 규약 송신자와 수신자 사이에 “데이터 구조는 이런 식을 하고, 이런 의미이고, 속도는 어느정도로 보내고” 등을 약속한 것이다.결국 HTTP는 클라이언트와 서버 간에 요청/응답 으로 데이터를 주고받는 프로토콜이다.클라이언트와 서버들은 개별적인 메시지 교환에 의해 통신한다. 보통 브라우저인 클라이언트에 의해 전송되는 메시지를 요청(request) 라 부르고, 그에 대해 서버에서..." }, { "title": "[Network] TCP VS UDP", "url": "/posts/TCP%EC%99%80UDP/", "categories": "Computer Science, Network", "tags": "network, tcp_and_udp", "date": "2020-12-02 16:12:13 +0900", "snippet": "전송계층→ TCP와 UDP는 TCP/IP의 전송계층 에서 사용되는 프로토콜이다. 전송계층은 IP에 의해 전달되는 패킷의 오류를 검사하고 재전송 요구 등의 제어를 담당하는 계층이다.TCP VS UDPTCP는 Transmission Control Protocol 의 약자이고, UDP는 User Datagram Protocol의 약자이다. 두 프로토콜은 모두 패킷을 한 컴퓨터에서 다른 컴퓨터로 전달해주는 IP 프로토콜을 기반으로 구현되어 있지만, 서로 다른 특징을 가지고 있다.그림으로 비교하는 TCP VS UDPTCP 연결형 서비..." }, { "title": "[Network] OSI 7Layer", "url": "/posts/OSI7layer/", "categories": "Computer Science, Network", "tags": "network, osi7layer", "date": "2020-12-01 14:03:13 +0900", "snippet": "OSI 7Layer란 ? 👀네트워크 통신 과정을 7개의 계층으로 구분한 산업 표준 참조 모델이다. 초창기의 네트워크는 각 컴퓨터마다 시스템이 달랐기 때문에 하드웨어와 소프트웨어의 논리적인 변경없이 통신할 수 있는 표준 모델이 나타나게 되었다.1계층 : 물리계층 (Physical Layer) 하드웨어물리계층은 OSI 모델의 최하위 계층에 속하며, 상위 계층에서 전송된 데이터를 물리 매체(허브, 라우터, 케이블) 를 통해 다른 시스템에 전기적 신호를 전송하는 역할을 한다.즉 , 기계어를 전기적 신호로 바꿔서 와이어에 실어주는 것..." }, { "title": "스햄케의 시작", "url": "/posts/%EC%8A%A4%ED%96%84%EC%BC%80%EC%8B%9C%EC%9E%91/", "categories": "My project, SmartHamsterHouse", "tags": "smarthamster, hamster", "date": "2020-11-30 14:03:13 +0900", "snippet": "스마트 햄스터 하우스의 시작 계기햄스터를 키우기 시작한지 벌써 4년이 다 되어간다. 처음 키우게 된 햄스터는 드워프 햄스터로 이름은 “호꿍”이다. 호야니 짝꿍이란 뜻..동물을 정말 정말 좋아했지만… 부모님이 극구 반대해서 결국 내 방에서 조용히 키울 수 있는 햄스터를 선택하게 됬다. 사실 또 그때 가장 친한 친구가 인도로 교환학생을 가게되면서 조금 울적한 마음에 햄스터를 또 키우게 된거같기도 하다.내손에 거쳐간 햄스터들이 참 많은데 유기 햄스터도 키우기도 하고 임보도 했었다. 모든 햄찌아가들이 나에게 정말 소중했지만 그 중에서..." }, { "title": "[My project] Demacia", "url": "/posts/demacia/", "categories": "My project, Demacia", "tags": "ssafy, demacia, project", "date": "2020-11-27 12:27:30 +0900", "snippet": "🚀 빅데이터 기반의 게임(League of Legend) 커뮤니티 : DEMACIA ​🚩​ 팀명 : 데미소다 팀장 : 김준원 팀원 : 곽세경, 김호연, 조완석, 송다희 프로젝트 기간 : 2020.08.31 ~ 2020.11.271. 사용 기술DB : MariaDBLanguage : Python 3.7, Java 1.8, JavaScriptFramework : Django, Spring, VueEtc : Docker, Nginx, Jenkins, Tesseract2. 팀구성 person 역할 ..." }, { "title": "[My project] GoSpec", "url": "/posts/gospec/", "categories": "My project, GoSpec", "tags": "project, gospec, ssafy", "date": "2020-08-31 04:12:30 +0900", "snippet": "GoSpec배포주소: http://tiroring.iptime.org:18080/시연 가능 계정: id : test/ pw: testUCC영상:https://www.youtube.com/watch?v=ff3WVptTH7U&amp;amp;feature=youtu.be (0:53 부터 시연 시작)팀원 정보 및 업무 분담 내역팀원: 김현수,김호연,남동규,서지훈,정명주 이름 역할 담당 기능 김현수 팀장 및 Backend Restful API 설계,..." }, { "title": "[My project] 취향의 나눔", "url": "/posts/My-project-%EC%B7%A8%ED%96%A5%EC%9D%98-%EB%82%98%EB%88%94/", "categories": "My project, 취향의 나눔", "tags": "ssafy, 취향의 나눔, project", "date": "2020-06-17 02:12:30 +0900", "snippet": "취향의 나눔 2020.06.11~2020.06.17UCC 영상 https://youtu.be/MtCmQCIbkI8프로젝트 배경 영화를 본 후 영화에 대한 감상을 나누고 싶어 하는 사람들의 니즈 발견 영화 정보 전달 위주의 기존 영화 사이트 영화 감상 공유에 초점을 둔 영화 사이트를 만들어보자!프로젝트 목표 및 기능 웹 사이트 명: 취향의 나눔 대상 : 영화에 대한 감상을 자유롭게 공유하고 싶은 사람 누구나 슬로건 : 당신과 닮은 취향을 가진 사람과 영화와 세계를 보는 시선을 공유해보세요. 목표 영..." }, { "title": "[My project] 긴급전화 1818", "url": "/posts/1818/", "categories": "My project, 긴급전화 1818", "tags": "ibm 해커톤, 해커톤, ibm", "date": "2020-06-14 18:32:30 +0900", "snippet": "🌈 2020 IBM hackathone : Call for Code Korea 🌎 팀명 : 1818 팀장 : 김호연 팀원 : 곽세경, 박현우, 최미리, 최정원 주제 : AI기반 공공전화 연결 서비스 “1818” 1818팀 회의 노션0. 콜 포 코드(Call for code) 란? ‘콜 포 코드(Call for Code)’ 글로벌 챌린지는 인공 지능, 블록체인, 클라우드, IoT 등의 정보통신기술(ICT)을 활용하여 가장 심각한 문제로 대두된 글로벌 이슈의 해법을 찾는 전 세계 개발자 대회입니다. ..." } ]
